platform = '6'
username = 'lcls2'
expname  = 'expname'
expnum   = 'expnum'

epics_env = 'EPICS_PVA_ADDR_LIST=172.21.151.255'
conda_rel = 'ps-2.0.3'

collect_host = 'drp-tst-acc06'

# procmgr FLAGS: <port number> static port number to keep executable
#                              running across multiple start/stop commands.
#
# HOST       UNIQUEID      FLAGS  COMMAND+ARGS
# list of processes to run
#   required fields: id, cmd
#   optional fields: host, port, flags, conda, env, rtprio
#     flags:
#        'x' or 'X'  -> xterm: open small or large xterm for process console
#        's'         -> stop: sends ctrl-c to process
#        'u'         -> uniqueid: use 'id' as detector alias (supported by acq, cam, camedt, evr, and simcam)

procmgr_config = [
 {                        id:'partca-'+platform, conda:conda_rel, env:epics_env, cmd:'partca DAQ:LAB2:PART:'+platform},
 {                        id:'procstat', flags:'p', conda:conda_rel, cmd:'procstat -t '+username+' -e0 -n none p'+platform+'.cnf.last'},
 { host: collect_host,    id:'control', flags:'spu', conda:conda_rel, env:epics_env, cmd:'control -v -C BEAM -P TMO -B DAQ:LAB2 -x 2'},
 {                        flags:'xp', id:'control_gui', conda:conda_rel, cmd:'control_gui -H'+collect_host},
 #{                        flags:'xp', id:'control_gui', conda:conda_rel, cmd:'control_gui -H'+collect_host+' -L logs'},
 # trigger event builder
 { host: 'drp-tst-dev001', id:'teb1', flags:'spu', conda:conda_rel, cmd:'teb -C '+collect_host},
 # cameras
 { host: 'drp-tst-dev011', id:'cam1_0', flags:'spux', conda:conda_rel, cmd:'drp -l 0xf -D AreaDetector -d /dev/datadev_0 -C '+collect_host},
 { host: 'drp-tst-dev012', id:'cam1_1', flags:'spu', conda:conda_rel, cmd:'drp -l 0xf -D AreaDetector -d /dev/datadev_0 -C '+collect_host}
]
